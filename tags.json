{
    "workspace": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience",
    "tags": [
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/App.tsx",
            "rel_fname": "src/App.tsx",
            "line_number": [
                20,
                20
            ],
            "name": "App",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const App = () => (\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                45,
                45
            ],
            "name": "totalItems",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const totalItems = items.reduce((total, item) => total + item.quantity, 0);\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                46,
                46
            ],
            "name": "totalPrice",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const totalPrice = items.reduce((total, item) => total + item.price * item.quantity, 0);\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                48,
                68
            ],
            "name": "addItem",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const addItem = (product: Omit<CartItem, 'quantity'>) => {\n    setItems(prevItems => {\n      // Check if the item is already in the cart\n      const existingItemIndex = prevItems.findIndex(item => item.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1\n        };\n        toast.success('Item quantity updated in cart');\n        return updatedItems;\n      } else {\n        // Item doesn't exist, add new item\n        toast.success('Item added to cart');\n        return [...prevItems, { ...product, quantity: 1 }];\n      }\n    });\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                51,
                51
            ],
            "name": "existingItemIndex",
            "identifier": "arrow_function",
            "category": "function",
            "details": "      const existingItemIndex = prevItems.findIndex(item => item.id === product.id);\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                70,
                73
            ],
            "name": "removeItem",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const removeItem = (id: string) => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n    toast.info('Item removed from cart');\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                75,
                86
            ],
            "name": "updateQuantity",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const updateQuantity = (id: string, quantity: number) => {\n    if (quantity < 1) {\n      removeItem(id);\n      return;\n    }\n    \n    setItems(prevItems =>\n      prevItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      )\n    );\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                88,
                91
            ],
            "name": "clearCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const clearCart = () => {\n    setItems([]);\n    toast.info('Cart cleared');\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                93,
                95
            ],
            "name": "toggleCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const toggleCart = () => {\n    setIsCartOpen(prev => !prev);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/CartContext.tsx",
            "rel_fname": "src/contexts/CartContext.tsx",
            "line_number": [
                116,
                122
            ],
            "name": "useCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const useCart = () => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/AuthContext.tsx",
            "rel_fname": "src/contexts/AuthContext.tsx",
            "line_number": [
                35,
                52
            ],
            "name": "login",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const login = async (email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      // Mock login - in a real app, this would call an API\n      const mockUser = {\n        id: '1',\n        name: 'John Doe',\n        email: email,\n        avatar: 'https://images.unsplash.com/photo-1472396961693-142e6e269027?auto=format&fit=crop&w=100&h=100&q=80',\n      };\n      \n      // Store user in localStorage\n      localStorage.setItem('giftastic-user', JSON.stringify(mockUser));\n      setUser(mockUser);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/AuthContext.tsx",
            "rel_fname": "src/contexts/AuthContext.tsx",
            "line_number": [
                54,
                71
            ],
            "name": "signup",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const signup = async (name: string, email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      // Mock signup - in a real app, this would call an API\n      const mockUser = {\n        id: '1',\n        name: name,\n        email: email,\n        avatar: 'https://images.unsplash.com/photo-1472396961693-142e6e269027?auto=format&fit=crop&w=100&h=100&q=80',\n      };\n      \n      // Store user in localStorage\n      localStorage.setItem('giftastic-user', JSON.stringify(mockUser));\n      setUser(mockUser);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/AuthContext.tsx",
            "rel_fname": "src/contexts/AuthContext.tsx",
            "line_number": [
                73,
                76
            ],
            "name": "logout",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const logout = () => {\n    localStorage.removeItem('giftastic-user');\n    setUser(null);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/AuthContext.tsx",
            "rel_fname": "src/contexts/AuthContext.tsx",
            "line_number": [
                94,
                100
            ],
            "name": "useAuth",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/WishlistContext.tsx",
            "rel_fname": "src/contexts/WishlistContext.tsx",
            "line_number": [
                41,
                47
            ],
            "name": "addItem",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const addItem = (product: WishlistItem) => {\n    // Check if the item is already in the wishlist\n    if (!isInWishlist(product.id)) {\n      setItems(prevItems => [...prevItems, product]);\n      toast.success('Item added to wishlist');\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/WishlistContext.tsx",
            "rel_fname": "src/contexts/WishlistContext.tsx",
            "line_number": [
                49,
                52
            ],
            "name": "removeItem",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const removeItem = (id: string) => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n    toast.info('Item removed from wishlist');\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/WishlistContext.tsx",
            "rel_fname": "src/contexts/WishlistContext.tsx",
            "line_number": [
                54,
                57
            ],
            "name": "clearWishlist",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const clearWishlist = () => {\n    setItems([]);\n    toast.info('Wishlist cleared');\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/WishlistContext.tsx",
            "rel_fname": "src/contexts/WishlistContext.tsx",
            "line_number": [
                59,
                61
            ],
            "name": "isInWishlist",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const isInWishlist = (id: string) => {\n    return items.some(item => item.id === id);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/contexts/WishlistContext.tsx",
            "rel_fname": "src/contexts/WishlistContext.tsx",
            "line_number": [
                79,
                85
            ],
            "name": "useWishlist",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const useWishlist = () => {\n  const context = useContext(WishlistContext);\n  if (context === undefined) {\n    throw new Error('useWishlist must be used within a WishlistProvider');\n  }\n  return context;\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/utils.ts",
            "rel_fname": "src/lib/utils.ts",
            "line_number": [
                4,
                6
            ],
            "name": "cn",
            "identifier": "function",
            "category": "function",
            "details": "export function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                240,
                242
            ],
            "name": "getProductById",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const getProductById = (id: string): Product | undefined => {\n  return products.find(product => product.id === id);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                245,
                252
            ],
            "name": "getRelatedProducts",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const getRelatedProducts = (productId: string, limit: number = 4): Product[] => {\n  const product = getProductById(productId);\n  if (!product) return [];\n  \n  return products\n    .filter(p => p.id !== productId && p.category === product.category)\n    .slice(0, limit);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                255,
                257
            ],
            "name": "getProductReviews",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const getProductReviews = (productId: string): Review[] => {\n  return reviews.filter(review => review.productId === productId);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                260,
                262
            ],
            "name": "filterProductsByCategory",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const filterProductsByCategory = (categorySlug: string): Product[] => {\n  return products.filter(product => product.category === categorySlug);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                265,
                273
            ],
            "name": "searchProducts",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const searchProducts = (query: string): Product[] => {\n  const lowercaseQuery = query.toLowerCase();\n  return products.filter(\n    product =>\n      product.name.toLowerCase().includes(lowercaseQuery) ||\n      product.description.toLowerCase().includes(lowercaseQuery) ||\n      product.tags.some(tag => tag.toLowerCase().includes(lowercaseQuery))\n  );\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                276,
                278
            ],
            "name": "getFeaturedProducts",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const getFeaturedProducts = (limit: number = 4): Product[] => {\n  return products.filter(product => product.isFeatured).slice(0, limit);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                281,
                283
            ],
            "name": "getNewProducts",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const getNewProducts = (limit: number = 4): Product[] => {\n  return products.filter(product => product.isNew).slice(0, limit);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/lib/data.ts",
            "rel_fname": "src/lib/data.ts",
            "line_number": [
                286,
                288
            ],
            "name": "getOnSaleProducts",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const getOnSaleProducts = (limit: number = 4): Product[] => {\n  return products.filter(product => product.isOnSale).slice(0, limit);\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/auth/AuthModal.tsx",
            "rel_fname": "src/components/auth/AuthModal.tsx",
            "line_number": [
                45,
                49
            ],
            "name": "handleEscape",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/auth/AuthModal.tsx",
            "rel_fname": "src/components/auth/AuthModal.tsx",
            "line_number": [
                70,
                89
            ],
            "name": "handleSubmit",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      if (view === 'login') {\n        await login(email, password);\n        toast.success('Successfully logged in');\n      } else {\n        await signup(name, email, password);\n        toast.success('Account created successfully');\n      }\n      onClose();\n    } catch (error) {\n      toast.error('Authentication failed. Please try again.');\n      console.error('Auth error:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/auth/AuthModal.tsx",
            "rel_fname": "src/components/auth/AuthModal.tsx",
            "line_number": [
                91,
                93
            ],
            "name": "togglePasswordVisibility",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/cart/CartItem.tsx",
            "rel_fname": "src/components/cart/CartItem.tsx",
            "line_number": [
                14,
                16
            ],
            "name": "incrementQuantity",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const incrementQuantity = () => {\n    updateQuantity(item.id, item.quantity + 1);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/cart/CartItem.tsx",
            "rel_fname": "src/components/cart/CartItem.tsx",
            "line_number": [
                18,
                24
            ],
            "name": "decrementQuantity",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const decrementQuantity = () => {\n    if (item.quantity > 1) {\n      updateQuantity(item.id, item.quantity - 1);\n    } else {\n      removeItem(item.id);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/cart/CartSidebar.tsx",
            "rel_fname": "src/components/cart/CartSidebar.tsx",
            "line_number": [
                15,
                19
            ],
            "name": "handleEscape",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isCartOpen) {\n        toggleCart();\n      }\n    };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/layout/Navbar.tsx",
            "rel_fname": "src/components/layout/Navbar.tsx",
            "line_number": [
                32,
                34
            ],
            "name": "handleScroll",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/layout/Navbar.tsx",
            "rel_fname": "src/components/layout/Navbar.tsx",
            "line_number": [
                44,
                47
            ],
            "name": "openAuthModal",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const openAuthModal = (view: 'login' | 'signup') => {\n    setAuthModalView(view);\n    setIsAuthModalOpen(true);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/products/ProductCard.tsx",
            "rel_fname": "src/components/products/ProductCard.tsx",
            "line_number": [
                22,
                31
            ],
            "name": "handleAddToCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleAddToCart = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    addItem({\n      id: product.id,\n      name: product.name,\n      price: product.isOnSale ? (product.salePrice || product.price) : product.price,\n      image: product.images[0],\n    });\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/products/ProductCard.tsx",
            "rel_fname": "src/components/products/ProductCard.tsx",
            "line_number": [
                33,
                47
            ],
            "name": "handleWishlistToggle",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleWishlistToggle = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (isInWishlist(product.id)) {\n      removeItem(product.id);\n    } else {\n      addToWishlist({\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.images[0],\n      });\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/products/ProductFilter.tsx",
            "rel_fname": "src/components/products/ProductFilter.tsx",
            "line_number": [
                31,
                35
            ],
            "name": "handleFilterChange",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleFilterChange = (newFilter: Partial<FilterOption>) => {\n    const updatedFilter = { ...filter, ...newFilter };\n    setFilter(updatedFilter);\n    onFilterChange(updatedFilter);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/products/ProductFilter.tsx",
            "rel_fname": "src/components/products/ProductFilter.tsx",
            "line_number": [
                37,
                47
            ],
            "name": "clearFilters",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const clearFilters = () => {\n    const resetFilter = {\n      category: null,\n      priceRange: null,\n      sort: null,\n      onSale: false,\n      inStock: true,\n    };\n    setFilter(resetFilter);\n    onFilterChange(resetFilter);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/products/ProductFilter.tsx",
            "rel_fname": "src/components/products/ProductFilter.tsx",
            "line_number": [
                49,
                51
            ],
            "name": "toggleMobileFilter",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const toggleMobileFilter = () => {\n    setIsMobileFilterOpen(!isMobileFilterOpen);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/form.tsx",
            "rel_fname": "src/components/ui/form.tsx",
            "line_number": [
                42,
                63
            ],
            "name": "useFormField",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/chart.tsx",
            "rel_fname": "src/components/ui/chart.tsx",
            "line_number": [
                25,
                33
            ],
            "name": "useChart",
            "identifier": "function",
            "category": "function",
            "details": "function useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/chart.tsx",
            "rel_fname": "src/components/ui/chart.tsx",
            "line_number": [
                68,
                99
            ],
            "name": "ChartStyle",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/chart.tsx",
            "rel_fname": "src/components/ui/chart.tsx",
            "line_number": [
                134,
                160
            ],
            "name": "tooltipLabel",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/chart.tsx",
            "rel_fname": "src/components/ui/chart.tsx",
            "line_number": [
                318,
                318
            ],
            "name": "getPayloadConfigFromPayload",
            "identifier": "function",
            "category": "function",
            "details": "function getPayloadConfigFromPayload(\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/command.tsx",
            "rel_fname": "src/components/ui/command.tsx",
            "line_number": [
                26,
                36
            ],
            "name": "CommandDialog",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/toaster.tsx",
            "rel_fname": "src/components/ui/toaster.tsx",
            "line_number": [
                11,
                33
            ],
            "name": "Toaster",
            "identifier": "function",
            "category": "function",
            "details": "export function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/sonner.tsx",
            "rel_fname": "src/components/ui/sonner.tsx",
            "line_number": [
                6,
                27
            ],
            "name": "Toaster",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/skeleton.tsx",
            "rel_fname": "src/components/ui/skeleton.tsx",
            "line_number": [
                3,
                13
            ],
            "name": "Skeleton",
            "identifier": "function",
            "category": "function",
            "details": "function Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/badge.tsx",
            "rel_fname": "src/components/ui/badge.tsx",
            "line_number": [
                30,
                34
            ],
            "name": "Badge",
            "identifier": "function",
            "category": "function",
            "details": "function Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/pagination.tsx",
            "rel_fname": "src/components/ui/pagination.tsx",
            "line_number": [
                7,
                7
            ],
            "name": "Pagination",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/sidebar.tsx",
            "rel_fname": "src/components/ui/sidebar.tsx",
            "line_number": [
                39,
                46
            ],
            "name": "useSidebar",
            "identifier": "function",
            "category": "function",
            "details": "function useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/sidebar.tsx",
            "rel_fname": "src/components/ui/sidebar.tsx",
            "line_number": [
                91,
                95
            ],
            "name": "toggleSidebar",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/sidebar.tsx",
            "rel_fname": "src/components/ui/sidebar.tsx",
            "line_number": [
                99,
                107
            ],
            "name": "handleKeyDown",
            "identifier": "arrow_function",
            "category": "function",
            "details": "      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/sidebar.tsx",
            "rel_fname": "src/components/ui/sidebar.tsx",
            "line_number": [
                652,
                654
            ],
            "name": "width",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/carousel.tsx",
            "rel_fname": "src/components/ui/carousel.tsx",
            "line_number": [
                33,
                41
            ],
            "name": "useCarousel",
            "identifier": "function",
            "category": "function",
            "details": "function useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/carousel.tsx",
            "rel_fname": "src/components/ui/carousel.tsx",
            "line_number": [
                69,
                76
            ],
            "name": "onSelect",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/carousel.tsx",
            "rel_fname": "src/components/ui/carousel.tsx",
            "line_number": [
                78,
                80
            ],
            "name": "scrollPrev",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/carousel.tsx",
            "rel_fname": "src/components/ui/carousel.tsx",
            "line_number": [
                82,
                84
            ],
            "name": "scrollNext",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/components/ui/calendar.tsx",
            "rel_fname": "src/components/ui/calendar.tsx",
            "line_number": [
                10,
                61
            ],
            "name": "Calendar",
            "identifier": "function",
            "category": "function",
            "details": "function Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ..._props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ..._props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                27,
                30
            ],
            "name": "genId",
            "identifier": "function",
            "category": "function",
            "details": "function genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                58,
                72
            ],
            "name": "addToRemoveQueue",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                63,
                69
            ],
            "name": "timeout",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                74,
                127
            ],
            "name": "reducer",
            "identifier": "arrow_function",
            "category": "function",
            "details": "export const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                133,
                138
            ],
            "name": "dispatch",
            "identifier": "function",
            "category": "function",
            "details": "function dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                142,
                169
            ],
            "name": "toast",
            "identifier": "function",
            "category": "function",
            "details": "function toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                145,
                145
            ],
            "name": "update",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const update = (props: ToasterToast) =>\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                150,
                150
            ],
            "name": "dismiss",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-toast.ts",
            "rel_fname": "src/hooks/use-toast.ts",
            "line_number": [
                171,
                189
            ],
            "name": "useToast",
            "identifier": "function",
            "category": "function",
            "details": "function useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-mobile.tsx",
            "rel_fname": "src/hooks/use-mobile.tsx",
            "line_number": [
                5,
                19
            ],
            "name": "useIsMobile",
            "identifier": "function",
            "category": "function",
            "details": "export function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/hooks/use-mobile.tsx",
            "rel_fname": "src/hooks/use-mobile.tsx",
            "line_number": [
                10,
                12
            ],
            "name": "onChange",
            "identifier": "arrow_function",
            "category": "function",
            "details": "    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/NotFound.tsx",
            "rel_fname": "src/pages/NotFound.tsx",
            "line_number": [
                4,
                25
            ],
            "name": "NotFound",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    console.error(\n      \"404 Error: User attempted to access non-existent route:\",\n      location.pathname\n    );\n  }, [location.pathname]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n        <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Wishlist.tsx",
            "rel_fname": "src/pages/Wishlist.tsx",
            "line_number": [
                12,
                143
            ],
            "name": "Wishlist",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const Wishlist = () => {\n  const { items, removeItem, clearWishlist } = useWishlist();\n  const { addItem } = useCart();\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0 }\n  };\n\n  const handleAddToCart = (wishlistItem: typeof items[0]) => {\n    addItem({\n      id: wishlistItem.id,\n      name: wishlistItem.name,\n      price: wishlistItem.price,\n      image: wishlistItem.image,\n    });\n    // Optionally remove from wishlist after adding to cart\n    // removeItem(wishlistItem.id);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      \n      <main className=\"pt-28 pb-16\">\n        <div className=\"container mx-auto px-4\">\n          <h1 className=\"text-3xl font-bold mb-8\">My Wishlist</h1>\n          \n          {items.length > 0 ? (\n            <div>\n              <div className=\"flex justify-between items-center mb-6\">\n                <p className=\"text-muted-foreground\">\n                  {items.length} {items.length === 1 ? 'item' : 'items'} in your wishlist\n                </p>\n                <button\n                  onClick={clearWishlist}\n                  className=\"text-sm text-muted-foreground hover:text-foreground transition-colors flex items-center\"\n                >\n                  <Trash className=\"w-4 h-4 mr-1\" />\n                  Clear Wishlist\n                </button>\n              </div>\n              \n              <motion.div \n                className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\"\n                variants={container}\n                initial=\"hidden\"\n                animate=\"show\"\n              >\n                {items.map((wishlistItem) => (\n                  <motion.div \n                    key={wishlistItem.id}\n                    variants={item}\n                    className=\"bg-background border border-border rounded-lg overflow-hidden hover:shadow-md transition-shadow\"\n                  >\n                    <Link to={`/product/${wishlistItem.id}`} className=\"block\">\n                      <div className=\"relative aspect-square bg-muted\">\n                        <img\n                          src={wishlistItem.image}\n                          alt={wishlistItem.name}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                    </Link>\n                    \n                    <div className=\"p-4\">\n                      <Link \n                        to={`/product/${wishlistItem.id}`}\n                        className=\"block font-medium hover:text-primary transition-colors mb-2\"\n                      >\n                        {wishlistItem.name}\n                      </Link>\n                      \n                      <div className=\"flex justify-between items-center mb-4\">\n                        <span className=\"font-medium\">\n                          ${wishlistItem.price.toFixed(2)}\n                        </span>\n                        <button\n                          onClick={() => removeItem(wishlistItem.id)}\n                          className=\"text-muted-foreground hover:text-red-500 transition-colors\"\n                          aria-label=\"Remove from wishlist\"\n                        >\n                          <Heart className=\"w-5 h-5 fill-red-500\" />\n                        </button>\n                      </div>\n                      \n                      <Button \n                        onClick={() => handleAddToCart(wishlistItem)}\n                        className=\"w-full\"\n                      >\n                        <ShoppingBag className=\"w-4 h-4 mr-2\" />\n                        Add to Cart\n                      </Button>\n                    </div>\n                  </motion.div>\n                ))}\n              </motion.div>\n            </div>\n          ) : (\n            <div className=\"text-center py-16\">\n              <div className=\"w-20 h-20 rounded-full bg-muted/50 flex items-center justify-center mx-auto mb-6\">\n                <Heart className=\"w-10 h-10 text-muted-foreground\" />\n              </div>\n              <h2 className=\"text-2xl font-bold mb-4\">Your Wishlist is Empty</h2>\n              <p className=\"text-muted-foreground mb-8 max-w-md mx-auto\">\n                You haven't added any items to your wishlist yet.\n                Explore our products and save your favorites for later!\n              </p>\n              <Button asChild size=\"lg\">\n                <Link to=\"/products\">\n                  Explore Products <ArrowRight className=\"w-5 h-5 ml-2\" />\n                </Link>\n              </Button>\n            </div>\n          )}\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Wishlist.tsx",
            "rel_fname": "src/pages/Wishlist.tsx",
            "line_number": [
                31,
                40
            ],
            "name": "handleAddToCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleAddToCart = (wishlistItem: typeof items[0]) => {\n    addItem({\n      id: wishlistItem.id,\n      name: wishlistItem.name,\n      price: wishlistItem.price,\n      image: wishlistItem.image,\n    });\n    // Optionally remove from wishlist after adding to cart\n    // removeItem(wishlistItem.id);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                28,
                685
            ],
            "name": "ProductDetail",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const ProductDetail = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(id ? getProductById(id) : undefined);\n  const [relatedProducts, setRelatedProducts] = useState(id ? getRelatedProducts(id) : []);\n  const [reviews, setReviews] = useState<Review[]>(id ? getProductReviews(id) : []);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [quantity, setQuantity] = useState(1);\n  const [isAddingToCart, setIsAddingToCart] = useState(false);\n  const { addItem } = useCart();\n  const { addItem: addToWishlist, isInWishlist, removeItem } = useWishlist();\n\n  useEffect(() => {\n    // Update product when ID changes\n    if (id) {\n      const productData = getProductById(id);\n      if (productData) {\n        setProduct(productData);\n        setRelatedProducts(getRelatedProducts(id));\n        setReviews(getProductReviews(id));\n        setCurrentImageIndex(0);\n        setQuantity(1);\n        // Scroll to top when product changes\n        window.scrollTo(0, 0);\n      } else {\n        // If product not found, redirect to products page\n        navigate('/products');\n        toast.error('Product not found');\n      }\n    }\n  }, [id, navigate]);\n\n  if (!product) {\n    return (\n      <div className=\"min-h-screen bg-background flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold mb-4\">Product Not Found</h2>\n          <p className=\"text-muted-foreground mb-6\">\n            The product you're looking for doesn't exist or has been removed.\n          </p>\n          <Button asChild>\n            <Link to=\"/products\">Back to Products</Link>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const handlePrevImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleNextImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const handleQuantityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0 && value <= product.stock) {\n      setQuantity(value);\n    }\n  };\n\n  const incrementQuantity = () => {\n    if (quantity < product.stock) {\n      setQuantity(prev => prev + 1);\n    }\n  };\n\n  const decrementQuantity = () => {\n    if (quantity > 1) {\n      setQuantity(prev => prev - 1);\n    }\n  };\n\n  const handleAddToCart = () => {\n    setIsAddingToCart(true);\n    \n    // Simulate a delay to show loading state\n    setTimeout(() => {\n      addItem({\n        id: product.id,\n        name: product.name,\n        price: product.isOnSale ? (product.salePrice || product.price) : product.price,\n        image: product.images[0],\n        quantity: quantity\n      });\n      setIsAddingToCart(false);\n    }, 500);\n  };\n\n  const handleWishlistToggle = () => {\n    if (isInWishlist(product.id)) {\n      removeItem(product.id);\n    } else {\n      addToWishlist({\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.images[0],\n      });\n    }\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: product.name,\n        text: product.description,\n        url: window.location.href,\n      }).catch((error) => console.log('Error sharing', error));\n    } else {\n      // Fallback for browsers that don't support Web Share API\n      navigator.clipboard.writeText(window.location.href);\n      toast.success('Link copied to clipboard');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      \n      <main className=\"pt-24 pb-16\">\n        <div className=\"container mx-auto px-4\">\n          {/* Breadcrumbs */}\n          <nav className=\"mb-8\">\n            <ol className=\"flex items-center text-sm\">\n              <li className=\"flex items-center\">\n                <Link to=\"/\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                  Home\n                </Link>\n                <span className=\"mx-2 text-muted-foreground\">/</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Link to=\"/products\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                  Products\n                </Link>\n                <span className=\"mx-2 text-muted-foreground\">/</span>\n              </li>\n              <li className=\"text-foreground font-medium truncate\">\n                {product.name}\n              </li>\n            </ol>\n          </nav>\n          \n          {/* Product Details */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Product Images */}\n            <div>\n              <div className=\"relative rounded-lg overflow-hidden bg-muted aspect-square\">\n                <AnimatePresence mode=\"wait\">\n                  <motion.img\n                    key={currentImageIndex}\n                    src={product.images[currentImageIndex]}\n                    alt={`${product.name} - Image ${currentImageIndex + 1}`}\n                    className=\"w-full h-full object-cover\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ duration: 0.3 }}\n                  />\n                </AnimatePresence>\n                \n                {/* Image navigation arrows */}\n                {product.images.length > 1 && (\n                  <>\n                    <button\n                      onClick={handlePrevImage}\n                      className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-10 h-10 bg-white/80 rounded-full flex items-center justify-center hover:bg-white transition-colors\"\n                      aria-label=\"Previous image\"\n                    >\n                      <ChevronLeft className=\"w-5 h-5\" />\n                    </button>\n                    <button\n                      onClick={handleNextImage}\n                      className=\"absolute right-4 top-1/2 transform -translate-y-1/2 w-10 h-10 bg-white/80 rounded-full flex items-center justify-center hover:bg-white transition-colors\"\n                      aria-label=\"Next image\"\n                    >\n                      <ChevronRight className=\"w-5 h-5\" />\n                    </button>\n                  </>\n                )}\n                \n                {/* Product badges */}\n                <div className=\"absolute top-4 left-4 flex flex-col gap-1\">\n                  {product.isNew && (\n                    <span className=\"badge-new\">New</span>\n                  )}\n                  {product.isOnSale && (\n                    <span className=\"badge-sale\">Sale</span>\n                  )}\n                  {product.isFeatured && (\n                    <span className=\"badge-featured\">Featured</span>\n                  )}\n                </div>\n              </div>\n              \n              {/* Thumbnail images */}\n              {product.images.length > 1 && (\n                <div className=\"mt-4 grid grid-cols-5 gap-2\">\n                  {product.images.map((image, index) => (\n                    <button\n                      key={index}\n                      className={`rounded-md overflow-hidden bg-muted aspect-square ${\n                        currentImageIndex === index \n                          ? 'ring-2 ring-primary' \n                          : 'hover:opacity-80'\n                      }`}\n                      onClick={() => setCurrentImageIndex(index)}\n                      aria-label={`View image ${index + 1}`}\n                    >\n                      <img\n                        src={image}\n                        alt={`${product.name} - Thumbnail ${index + 1}`}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n            \n            {/* Product Info */}\n            <div className=\"flex flex-col\">\n              <div className=\"mb-auto\">\n                <div className=\"flex items-center mb-2\">\n                  <div className=\"flex\">\n                    {[...Array(5)].map((_, i) => (\n                      <Star\n                        key={i}\n                        className={`w-4 h-4 ${\n                          i < Math.round(product.averageRating)\n                            ? 'text-amber-400 fill-amber-400'\n                            : 'text-gray-300 fill-gray-300'\n                        }`}\n                      />\n                    ))}\n                  </div>\n                  <span className=\"ml-2 text-sm text-muted-foreground\">\n                    {product.averageRating.toFixed(1)} ({product.reviewCount} reviews)\n                  </span>\n                </div>\n                \n                <h1 className=\"text-3xl font-bold mb-4\">{product.name}</h1>\n                \n                <div className=\"mb-6\">\n                  {product.isOnSale ? (\n                    <div className=\"flex items-center\">\n                      <span className=\"text-2xl font-bold text-red-500\">\n                        ${product.salePrice?.toFixed(2)}\n                      </span>\n                      <span className=\"ml-3 text-lg text-muted-foreground line-through\">\n                        ${product.price.toFixed(2)}\n                      </span>\n                      <span className=\"ml-3 px-2 py-1 text-xs font-medium bg-red-100 text-red-700 rounded\">\n                        {Math.round(100 - ((product.salePrice || 0) / product.price) * 100)}% OFF\n                      </span>\n                    </div>\n                  ) : (\n                    <span className=\"text-2xl font-bold\">\n                      ${product.price.toFixed(2)}\n                    </span>\n                  )}\n                </div>\n                \n                <p className=\"text-muted-foreground mb-8\">\n                  {product.description}\n                </p>\n                \n                {/* Stock information */}\n                <div className=\"mb-6\">\n                  <span className={`text-sm font-medium ${\n                    product.stock > 0 ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {product.stock > 0 \n                      ? <>\n                          <Check className=\"w-4 h-4 inline-block mr-1\" />\n                          In Stock ({product.stock} available)\n                        </>\n                      : 'Out of Stock'\n                    }\n                  </span>\n                </div>\n                \n                {/* Quantity selector */}\n                <div className=\"mb-8\">\n                  <label htmlFor=\"quantity\" className=\"block text-sm font-medium mb-2\">\n                    Quantity\n                  </label>\n                  <div className=\"flex items-center\">\n                    <button\n                      onClick={decrementQuantity}\n                      className=\"p-2 border border-border rounded-l-md hover:bg-muted transition-colors\"\n                      disabled={quantity <= 1}\n                      aria-label=\"Decrease quantity\"\n                    >\n                      <ChevronLeft className=\"w-4 h-4\" />\n                    </button>\n                    <input\n                      type=\"number\"\n                      id=\"quantity\"\n                      min=\"1\"\n                      max={product.stock}\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                      className=\"w-16 text-center border-y border-border py-2 bg-background focus:outline-none\"\n                    />\n                    <button\n                      onClick={incrementQuantity}\n                      className=\"p-2 border border-border rounded-r-md hover:bg-muted transition-colors\"\n                      disabled={quantity >= product.stock}\n                      aria-label=\"Increase quantity\"\n                    >\n                      <ChevronRight className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Action buttons */}\n                <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n                  <Button \n                    onClick={handleAddToCart} \n                    disabled={isAddingToCart || product.stock <= 0}\n                    className=\"flex-1 py-6\"\n                  >\n                    {isAddingToCart ? (\n                      <>\n                        <RotateCw className=\"w-5 h-5 mr-2 animate-spin\" />\n                        Adding...\n                      </>\n                    ) : (\n                      <>\n                        <ShoppingBag className=\"w-5 h-5 mr-2\" />\n                        Add to Cart\n                      </>\n                    )}\n                  </Button>\n                  \n                  <Button\n                    variant=\"outline\"\n                    onClick={handleWishlistToggle}\n                    className={`py-6 ${isInWishlist(product.id) ? 'bg-red-50 text-red-600 border-red-200 hover:bg-red-100' : ''}`}\n                  >\n                    <Heart className={`w-5 h-5 mr-2 ${isInWishlist(product.id) ? 'fill-red-500' : ''}`} />\n                    {isInWishlist(product.id) ? 'Remove from Wishlist' : 'Add to Wishlist'}\n                  </Button>\n                  \n                  <Button\n                    variant=\"outline\"\n                    onClick={handleShare}\n                    className=\"sm:w-auto\"\n                  >\n                    <Share className=\"w-5 h-5\" />\n                  </Button>\n                </div>\n              </div>\n              \n              {/* Additional information */}\n              <div className=\"border-t border-border pt-6 space-y-4\">\n                <div className=\"flex items-start\">\n                  <Truck className=\"w-5 h-5 text-muted-foreground mt-0.5 mr-3 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">Free Shipping</p>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Free shipping on orders over $50. Estimated delivery: 3-5 business days\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <RotateCw className=\"w-5 h-5 text-muted-foreground mt-0.5 mr-3 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">Easy Returns</p>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Return or exchange within 30 days of delivery\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <Clock className=\"w-5 h-5 text-muted-foreground mt-0.5 mr-3 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">Processing Time</p>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Your custom gift will be created in 1-2 business days\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Tabs for Details, Reviews, etc. */}\n          <div className=\"mt-16\">\n            <Tabs defaultValue=\"details\">\n              <TabsList className=\"grid w-full grid-cols-3 mb-8\">\n                <TabsTrigger value=\"details\">Product Details</TabsTrigger>\n                <TabsTrigger value=\"reviews\">Reviews ({reviews.length})</TabsTrigger>\n                <TabsTrigger value=\"shipping\">Shipping & Returns</TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"details\" className=\"border border-border rounded-lg p-6\">\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium mb-3\">Description</h3>\n                    <p className=\"text-muted-foreground\">\n                      {product.description}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-lg font-medium mb-3\">Features</h3>\n                    <ul className=\"list-disc pl-5 text-muted-foreground space-y-2\">\n                      <li>Premium quality materials</li>\n                      <li>Handcrafted by skilled artisans</li>\n                      <li>Personalized to your specifications</li>\n                      <li>Elegant gift packaging included</li>\n                      <li>Perfect for special occasions</li>\n                    </ul>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-lg font-medium mb-3\">Specifications</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"border border-border rounded-md p-4\">\n                        <div className=\"text-sm font-medium text-muted-foreground mb-1\">\n                          Category\n                        </div>\n                        <div className=\"capitalize\">{product.category.replace('-', ' ')}</div>\n                      </div>\n                      \n                      <div className=\"border border-border rounded-md p-4\">\n                        <div className=\"text-sm font-medium text-muted-foreground mb-1\">\n                          Material\n                        </div>\n                        <div>Premium Quality</div>\n                      </div>\n                      \n                      <div className=\"border border-border rounded-md p-4\">\n                        <div className=\"text-sm font-medium text-muted-foreground mb-1\">\n                          Dimensions\n                        </div>\n                        <div>Varies based on selection</div>\n                      </div>\n                      \n                      <div className=\"border border-border rounded-md p-4\">\n                        <div className=\"text-sm font-medium text-muted-foreground mb-1\">\n                          Customization\n                        </div>\n                        <div>Available</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"reviews\" className=\"border border-border rounded-lg p-6\">\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-lg font-medium\">Customer Reviews</h3>\n                    <Button asChild>\n                      <Link to={`/product/${product.id}/review`}>\n                        <MessageCircle className=\"w-4 h-4 mr-2\" />\n                        Write a Review\n                      </Link>\n                    </Button>\n                  </div>\n                  \n                  {/* Overall Rating */}\n                  <div className=\"flex items-center space-x-4 p-4 bg-muted/30 rounded-lg\">\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl font-bold\">{product.averageRating.toFixed(1)}</div>\n                      <div className=\"flex mt-1\">\n                        {[...Array(5)].map((_, i) => (\n                          <Star\n                            key={i}\n                            className={`w-4 h-4 ${\n                              i < Math.round(product.averageRating)\n                                ? 'text-amber-400 fill-amber-400'\n                                : 'text-gray-300 fill-gray-300'\n                            }`}\n                          />\n                        ))}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground mt-1\">\n                        {product.reviewCount} reviews\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex-1 space-y-1\">\n                      {[5, 4, 3, 2, 1].map((rating) => {\n                        const count = reviews.filter(r => Math.round(r.rating) === rating).length;\n                        const percentage = product.reviewCount > 0 \n                          ? (count / product.reviewCount) * 100 \n                          : 0;\n                        \n                        return (\n                          <div key={rating} className=\"flex items-center\">\n                            <div className=\"text-sm text-muted-foreground w-8\">{rating}</div>\n                            <Star className=\"w-4 h-4 text-amber-400 fill-amber-400 mr-2\" />\n                            <div className=\"flex-1 h-2 bg-muted rounded-full overflow-hidden\">\n                              <div \n                                className=\"h-full bg-amber-400 rounded-full\" \n                                style={{ width: `${percentage}%` }}\n                              />\n                            </div>\n                            <div className=\"text-sm text-muted-foreground ml-2 w-10\">\n                              {count}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  \n                  {/* Review List */}\n                  {reviews.length > 0 ? (\n                    <div className=\"space-y-6\">\n                      {reviews.map((review) => (\n                        <div key={review.id} className=\"border-b border-border pb-6 last:border-none last:pb-0\">\n                          <div className=\"flex items-center justify-between mb-3\">\n                            <div className=\"flex items-center\">\n                              <div className=\"w-8 h-8 rounded-full overflow-hidden bg-muted mr-3\">\n                                <img \n                                  src={review.userAvatar}\n                                  alt={review.userName}\n                                  className=\"w-full h-full object-cover\"\n                                />\n                              </div>\n                              <div>\n                                <h4 className=\"font-medium\">{review.userName}</h4>\n                                <div className=\"flex items-center text-sm text-muted-foreground\">\n                                  {new Date(review.date).toLocaleDateString('en-US', {\n                                    year: 'numeric',\n                                    month: 'long',\n                                    day: 'numeric'\n                                  })}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"flex\">\n                              {[...Array(5)].map((_, i) => (\n                                <Star\n                                  key={i}\n                                  className={`w-4 h-4 ${\n                                    i < review.rating\n                                      ? 'text-amber-400 fill-amber-400'\n                                      : 'text-gray-300 fill-gray-300'\n                                  }`}\n                                />\n                              ))}\n                            </div>\n                          </div>\n                          <p className=\"text-muted-foreground\">\n                            {review.comment}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-12\">\n                      <MessageCircle className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\n                      <h4 className=\"text-lg font-medium mb-2\">No Reviews Yet</h4>\n                      <p className=\"text-muted-foreground mb-6\">\n                        Be the first to review this product\n                      </p>\n                      <Button asChild>\n                        <Link to={`/product/${product.id}/review`}>\n                          Write a Review\n                        </Link>\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"shipping\" className=\"border border-border rounded-lg p-6\">\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium mb-3\">Shipping Information</h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      We offer the following shipping options for your convenience:\n                    </p>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between p-3 border border-border rounded-md\">\n                        <div>\n                          <p className=\"font-medium\">Standard Shipping</p>\n                          <p className=\"text-sm text-muted-foreground\">3-5 business days</p>\n                        </div>\n                        <div className=\"font-medium\">$4.99</div>\n                      </div>\n                      <div className=\"flex justify-between p-3 border border-border rounded-md\">\n                        <div>\n                          <p className=\"font-medium\">Express Shipping</p>\n                          <p className=\"text-sm text-muted-foreground\">1-2 business days</p>\n                        </div>\n                        <div className=\"font-medium\">$9.99</div>\n                      </div>\n                      <div className=\"flex justify-between p-3 border border-border rounded-md bg-muted/30\">\n                        <div>\n                          <p className=\"font-medium\">Free Shipping</p>\n                          <p className=\"text-sm text-muted-foreground\">On orders over $50</p>\n                        </div>\n                        <div className=\"font-medium text-green-600\">FREE</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-lg font-medium mb-3\">Return Policy</h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      We want you to be completely satisfied with your purchase. If for any reason you're not, we offer a simple return policy:\n                    </p>\n                    <ul className=\"list-disc pl-5 text-muted-foreground space-y-2\">\n                      <li>You have 30 days to return or exchange your item from the date of delivery.</li>\n                      <li>Items must be unused and in their original packaging.</li>\n                      <li>For personalized items, we only accept returns if there was a manufacturing defect or error on our part.</li>\n                      <li>Refunds will be issued to the original payment method within 5-7 business days after we receive your return.</li>\n                      <li>Return shipping costs are the responsibility of the customer unless the return is due to a defect or our error.</li>\n                    </ul>\n                  </div>\n                  \n                  <div className=\"p-4 bg-muted/30 rounded-lg\">\n                    <h4 className=\"font-medium mb-2\">Need Help?</h4>\n                    <p className=\"text-sm text-muted-foreground\">\n                      If you have any questions about shipping or returns, please contact our customer service team at\n                      <a href=\"mailto:support@giftastic.com\" className=\"text-primary ml-1\">\n                        support@giftastic.com\n                      </a>\n                    </p>\n                  </div>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n          \n          {/* Related Products */}\n          {relatedProducts.length > 0 && (\n            <div className=\"mt-16\">\n              <h2 className=\"text-2xl font-bold mb-8\">You May Also Like</h2>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {relatedProducts.map((product) => (\n                  <ProductCard key={product.id} product={product} />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                76,
                80
            ],
            "name": "handlePrevImage",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handlePrevImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                82,
                86
            ],
            "name": "handleNextImage",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleNextImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                88,
                93
            ],
            "name": "handleQuantityChange",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleQuantityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0 && value <= product.stock) {\n      setQuantity(value);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                95,
                99
            ],
            "name": "incrementQuantity",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const incrementQuantity = () => {\n    if (quantity < product.stock) {\n      setQuantity(prev => prev + 1);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                101,
                105
            ],
            "name": "decrementQuantity",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const decrementQuantity = () => {\n    if (quantity > 1) {\n      setQuantity(prev => prev - 1);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                107,
                121
            ],
            "name": "handleAddToCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleAddToCart = () => {\n    setIsAddingToCart(true);\n    \n    // Simulate a delay to show loading state\n    setTimeout(() => {\n      addItem({\n        id: product.id,\n        name: product.name,\n        price: product.isOnSale ? (product.salePrice || product.price) : product.price,\n        image: product.images[0],\n        quantity: quantity\n      });\n      setIsAddingToCart(false);\n    }, 500);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                123,
                134
            ],
            "name": "handleWishlistToggle",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleWishlistToggle = () => {\n    if (isInWishlist(product.id)) {\n      removeItem(product.id);\n    } else {\n      addToWishlist({\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.images[0],\n      });\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                136,
                148
            ],
            "name": "handleShare",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: product.name,\n        text: product.description,\n        url: window.location.href,\n      }).catch((error) => console.log('Error sharing', error));\n    } else {\n      // Fallback for browsers that don't support Web Share API\n      navigator.clipboard.writeText(window.location.href);\n      toast.success('Link copied to clipboard');\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/ProductDetail.tsx",
            "rel_fname": "src/pages/ProductDetail.tsx",
            "line_number": [
                523,
                523
            ],
            "name": "count",
            "identifier": "arrow_function",
            "category": "function",
            "details": "                        const count = reviews.filter(r => Math.round(r.rating) === rating).length;\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Index.tsx",
            "rel_fname": "src/pages/Index.tsx",
            "line_number": [
                18,
                558
            ],
            "name": "Index",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const Index = () => {\n  const [featuredProducts, setFeaturedProducts] = useState(getFeaturedProducts());\n  const [newProducts, setNewProducts] = useState(getNewProducts());\n  const [saleProducts, setSaleProducts] = useState(getOnSaleProducts());\n  const [isVisible, setIsVisible] = useState(false);\n  const { addItem } = useCart();\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  // Animation variants\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0 }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      \n      {/* Hero Section */}\n      <AnimatePresence>\n        {isVisible && (\n          <motion.section \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            className=\"pt-28 pb-16 px-4 md:pt-36 md:pb-24\"\n          >\n            <div className=\"container mx-auto max-w-6xl\">\n              <div className=\"flex flex-col md:flex-row items-center\">\n                <motion.div \n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: 0.2 }}\n                  className=\"md:w-1/2 text-center md:text-left mb-10 md:mb-0 md:pr-12\"\n                >\n                  <span className=\"inline-block px-3 py-1 bg-primary/10 text-primary rounded-full text-sm font-medium mb-6\">\n                    Personalized With Love\n                  </span>\n                  <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold mb-6 tracking-tight\">\n                    Gifts That Say What \n                    <span className=\"text-primary\"> Words Can't</span>\n                  </h1>\n                  <p className=\"text-lg md:text-xl text-muted-foreground mb-8 max-w-xl\">\n                    Create lasting memories with our thoughtfully crafted personalized gifts for every special occasion in your life.\n                  </p>\n                  <div className=\"flex flex-col sm:flex-row gap-4 justify-center md:justify-start\">\n                    <Button asChild size=\"lg\" className=\"rounded-full\">\n                      <Link to=\"/products\">\n                        Shop Now <ArrowRight className=\"ml-2 w-5 h-5\" />\n                      </Link>\n                    </Button>\n                    <Button asChild variant=\"outline\" size=\"lg\" className=\"rounded-full\">\n                      <Link to=\"/categories\">\n                        Explore Categories\n                      </Link>\n                    </Button>\n                  </div>\n                </motion.div>\n                \n                <motion.div \n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: 0.4 }}\n                  className=\"md:w-1/2\"\n                >\n                  <div className=\"relative\">\n                    <motion.div \n                      className=\"rounded-2xl overflow-hidden bg-muted aspect-[4/3] md:aspect-square\"\n                      whileHover={{ scale: 1.02 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <img \n                        src=\"https://images.unsplash.com/photo-1582562124811-c09040d0a901?auto=format&fit=crop&w=800&q=80\" \n                        alt=\"Personalized Gift Collection\" \n                        className=\"w-full h-full object-cover\"\n                      />\n                    </motion.div>\n                    \n                    {/* Floating elements */}\n                    <motion.div \n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.4, delay: 0.7 }}\n                      className=\"absolute -bottom-5 -left-5 md:-left-10 bg-background rounded-lg p-3 shadow-md flex items-center\"\n                    >\n                      <div className=\"bg-primary/10 rounded-full p-2 mr-3\">\n                        <Gift className=\"w-5 h-5 text-primary\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium\">Free Gift Wrapping</p>\n                        <p className=\"text-xs text-muted-foreground\">On all orders</p>\n                      </div>\n                    </motion.div>\n                    \n                    <motion.div \n                      initial={{ opacity: 0, y: -20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.4, delay: 0.9 }}\n                      className=\"absolute -top-5 right-5 md:-right-5 bg-background rounded-lg p-3 shadow-md flex items-center\"\n                    >\n                      <div className=\"bg-amber-100 rounded-full p-2 mr-3\">\n                        <Star className=\"w-5 h-5 text-amber-500\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium\">4.9 Stars</p>\n                        <p className=\"text-xs text-muted-foreground\">500+ reviews</p>\n                      </div>\n                    </motion.div>\n                  </div>\n                </motion.div>\n              </div>\n            </div>\n          </motion.section>\n        )}\n      </AnimatePresence>\n      \n      {/* Featured Products */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"mb-10 text-center\">\n            <motion.h2 \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n              className=\"text-3xl font-bold mb-4\"\n            >\n              Featured Gifts\n            </motion.h2>\n            <motion.p \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"text-muted-foreground max-w-2xl mx-auto\"\n            >\n              Discover our most popular personalized gifts, handpicked for every occasion\n            </motion.p>\n          </div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\"\n            variants={container}\n            initial=\"hidden\"\n            whileInView=\"show\"\n            viewport={{ once: true }}\n          >\n            {featuredProducts.map((product) => (\n              <motion.div key={product.id} variants={item}>\n                <ProductCard product={product} />\n              </motion.div>\n            ))}\n          </motion.div>\n          \n          <div className=\"mt-12 text-center\">\n            <Button asChild variant=\"outline\">\n              <Link to=\"/products\">\n                View All Products <ArrowRight className=\"ml-2 w-4 h-4\" />\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n      \n      {/* Categories Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"mb-10 text-center\">\n            <motion.h2 \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n              className=\"text-3xl font-bold mb-4\"\n            >\n              Shop By Category\n            </motion.h2>\n            <motion.p \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"text-muted-foreground max-w-2xl mx-auto\"\n            >\n              Explore our wide range of personalized gift categories\n            </motion.p>\n          </div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6\"\n            variants={container}\n            initial=\"hidden\"\n            whileInView=\"show\"\n            viewport={{ once: true }}\n          >\n            {categories.map((category) => (\n              <motion.div \n                key={category.id} \n                variants={item}\n                whileHover={{ y: -5, transition: { duration: 0.2 } }}\n              >\n                <Link \n                  to={`/categories/${category.slug}`} \n                  className=\"block group relative h-48 rounded-lg overflow-hidden\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10\" />\n                  <img \n                    src={`https://images.unsplash.com/photo-${category.id === '1' ? '1582562124811-c09040d0a901' : \n                      category.id === '2' ? '1618160702438-9b02ab6515c9' : \n                      category.id === '3' ? '1472396961693-142e6e269027' :\n                      category.id === '4' ? '1721322800607-8c38375eef04' :\n                      '1582562124811-c09040d0a901'}?auto=format&fit=crop&w=400&q=80`}\n                    alt={category.name}\n                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110\"\n                  />\n                  <div className=\"absolute bottom-0 left-0 right-0 p-4 z-20\">\n                    <h3 className=\"text-white font-medium text-lg\">{category.name}</h3>\n                    <span className=\"inline-flex items-center text-white/90 text-sm mt-1\">\n                      Shop now <ArrowRight className=\"w-3 h-3 ml-1\" />\n                    </span>\n                  </div>\n                </Link>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n      \n      {/* Benefits Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"mb-10 text-center\">\n            <motion.h2 \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n              className=\"text-3xl font-bold mb-4\"\n            >\n              Why Choose Us\n            </motion.h2>\n            <motion.p \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"text-muted-foreground max-w-2xl mx-auto\"\n            >\n              We take pride in creating personalized gifts that will be cherished for years to come\n            </motion.p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"bg-background p-6 rounded-lg border border-border hover:shadow-md transition-shadow\"\n            >\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                <Gift className=\"w-6 h-6 text-primary\" />\n              </div>\n              <h3 className=\"text-lg font-medium mb-2\">Unique Personalization</h3>\n              <p className=\"text-muted-foreground\">\n                Every product is customizable to your specifications, making each gift truly one-of-a-kind.\n              </p>\n            </motion.div>\n            \n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              className=\"bg-background p-6 rounded-lg border border-border hover:shadow-md transition-shadow\"\n            >\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                <Star className=\"w-6 h-6 text-primary\" />\n              </div>\n              <h3 className=\"text-lg font-medium mb-2\">Premium Quality</h3>\n              <p className=\"text-muted-foreground\">\n                We use only the finest materials and craftsmanship to ensure your gifts last a lifetime.\n              </p>\n            </motion.div>\n            \n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              className=\"bg-background p-6 rounded-lg border border-border hover:shadow-md transition-shadow\"\n            >\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                <Package className=\"w-6 h-6 text-primary\" />\n              </div>\n              <h3 className=\"text-lg font-medium mb-2\">Fast Delivery</h3>\n              <p className=\"text-muted-foreground\">\n                Quick processing and shipping to ensure your personalized gifts arrive right on time.\n              </p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n      \n      {/* New Arrivals Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex justify-between items-end mb-10\">\n            <div>\n              <span className=\"text-sm font-medium text-primary mb-2 flex items-center\">\n                <TrendingUp className=\"w-4 h-4 mr-1\" /> Just Arrived\n              </span>\n              <h2 className=\"text-3xl font-bold\">New Arrivals</h2>\n            </div>\n            <Link \n              to=\"/products\" \n              className=\"text-primary hover:text-primary/80 transition-colors inline-flex items-center\"\n            >\n              View All <ArrowRight className=\"w-4 h-4 ml-1\" />\n            </Link>\n          </div>\n          \n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {newProducts.map((product) => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n          </div>\n        </div>\n      </section>\n      \n      {/* Special Offers Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex justify-between items-end mb-10\">\n            <div>\n              <span className=\"text-sm font-medium text-red-500 mb-2 flex items-center\">\n                <Tag className=\"w-4 h-4 mr-1\" /> Limited Time\n              </span>\n              <h2 className=\"text-3xl font-bold\">Special Offers</h2>\n            </div>\n            <Link \n              to=\"/products\" \n              className=\"text-primary hover:text-primary/80 transition-colors inline-flex items-center\"\n            >\n              View All <ArrowRight className=\"w-4 h-4 ml-1\" />\n            </Link>\n          </div>\n          \n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {saleProducts.map((product) => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n          </div>\n        </div>\n      </section>\n      \n      {/* Testimonial Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"mb-10 text-center\">\n            <motion.h2 \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n              className=\"text-3xl font-bold mb-4\"\n            >\n              What Our Customers Say\n            </motion.h2>\n            <motion.p \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"text-muted-foreground max-w-2xl mx-auto\"\n            >\n              Read testimonials from our happy customers\n            </motion.p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"bg-background p-6 rounded-lg border border-border hover:shadow-md transition-shadow\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full overflow-hidden bg-muted mr-3\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1582562124811-c09040d0a901?auto=format&fit=crop&w=100&h=100&q=80\"\n                      alt=\"Emily Johnson\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium\">Emily Johnson</h4>\n                    <p className=\"text-sm text-muted-foreground\">New York, NY</p>\n                  </div>\n                </div>\n                <div className=\"flex\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 text-amber-400 fill-amber-400\" />\n                  ))}\n                </div>\n              </div>\n              <p className=\"text-muted-foreground\">\n                \"The personalized photo frame I ordered for my parents' anniversary was absolutely perfect. The quality exceeded my expectations and the personalization was done beautifully.\"\n              </p>\n            </motion.div>\n            \n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              className=\"bg-background p-6 rounded-lg border border-border hover:shadow-md transition-shadow\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full overflow-hidden bg-muted mr-3\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1472396961693-142e6e269027?auto=format&fit=crop&w=100&h=100&q=80\"\n                      alt=\"Michael Smith\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium\">Michael Smith</h4>\n                    <p className=\"text-sm text-muted-foreground\">Chicago, IL</p>\n                  </div>\n                </div>\n                <div className=\"flex\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className={`w-4 h-4 ${i < 4 ? 'text-amber-400 fill-amber-400' : 'text-gray-300 fill-gray-300'}`} />\n                  ))}\n                </div>\n              </div>\n              <p className=\"text-muted-foreground\">\n                \"I ordered the custom star map for our anniversary, and it arrived quickly and looks amazing. The print quality is excellent, and it's now proudly displayed in our bedroom.\"\n              </p>\n            </motion.div>\n            \n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              className=\"bg-background p-6 rounded-lg border border-border hover:shadow-md transition-shadow\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full overflow-hidden bg-muted mr-3\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1582562124811-c09040d0a901?auto=format&fit=crop&w=100&h=100&q=80\"\n                      alt=\"Sophia Williams\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium\">Sophia Williams</h4>\n                    <p className=\"text-sm text-muted-foreground\">Los Angeles, CA</p>\n                  </div>\n                </div>\n                <div className=\"flex\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 text-amber-400 fill-amber-400\" />\n                  ))}\n                </div>\n              </div>\n              <p className=\"text-muted-foreground\">\n                \"The custom name necklace I bought for my daughter's birthday is absolutely beautiful. The quality is outstanding and the personalization is perfect. She hasn't taken it off since!\"\n              </p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n      \n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary/5\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <motion.h2 \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n              className=\"text-3xl font-bold mb-4\"\n            >\n              Ready to Create Your Perfect Gift?\n            </motion.h2>\n            <motion.p \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\"\n            >\n              Browse our collection of personalized gifts and find something special for your loved ones today.\n            </motion.p>\n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              className=\"flex flex-col sm:flex-row gap-4 justify-center\"\n            >\n              <Button asChild size=\"lg\" className=\"rounded-full\">\n                <Link to=\"/products\">\n                  Shop Now <ArrowRight className=\"ml-2 w-5 h-5\" />\n                </Link>\n              </Button>\n              <Button asChild variant=\"outline\" size=\"lg\" className=\"rounded-full\">\n                <Link to=\"/contact\">\n                  Contact Us\n                </Link>\n              </Button>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n      \n      <Footer />\n    </div>\n  );\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Cart.tsx",
            "rel_fname": "src/pages/Cart.tsx",
            "line_number": [
                11,
                293
            ],
            "name": "Cart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "const Cart = () => {\n  const { items, updateQuantity, removeItem, clearCart, totalItems, totalPrice } = useCart();\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [promoCode, setPromoCode] = useState('');\n  const [isPromoValid, setIsPromoValid] = useState<boolean | null>(null);\n\n  const handleUpdateCart = () => {\n    setIsUpdating(true);\n    // Simulate cart update delay\n    setTimeout(() => {\n      setIsUpdating(false);\n    }, 500);\n  };\n\n  const checkPromoCode = () => {\n    // Simulate promo code check\n    if (promoCode.toLowerCase() === 'welcome10') {\n      setIsPromoValid(true);\n    } else {\n      setIsPromoValid(false);\n    }\n  };\n\n  const getDiscountAmount = () => {\n    return isPromoValid ? totalPrice * 0.1 : 0;\n  };\n\n  const getFinalTotal = () => {\n    const discount = getDiscountAmount();\n    return totalPrice - discount;\n  };\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0 }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      \n      <main className=\"pt-28 pb-16\">\n        <div className=\"container mx-auto px-4\">\n          <h1 className=\"text-3xl font-bold mb-8\">Shopping Cart</h1>\n          \n          {items.length > 0 ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {/* Cart Items */}\n              <div className=\"lg:col-span-2\">\n                <div className=\"bg-background border border-border rounded-lg overflow-hidden\">\n                  <div className=\"p-4 border-b border-border bg-muted/30 flex items-center justify-between\">\n                    <h2 className=\"font-medium\">\n                      Cart Items ({totalItems})\n                    </h2>\n                    <button\n                      onClick={clearCart}\n                      className=\"text-sm text-muted-foreground hover:text-foreground transition-colors\"\n                    >\n                      Clear Cart\n                    </button>\n                  </div>\n                  \n                  <motion.div \n                    className=\"divide-y divide-border\"\n                    variants={container}\n                    initial=\"hidden\"\n                    animate=\"show\"\n                  >\n                    {items.map((item) => (\n                      <motion.div \n                        key={item.id} \n                        className=\"p-4 flex items-center\"\n                        variants={item}\n                      >\n                        <div className=\"w-16 h-16 rounded-md overflow-hidden bg-muted flex-shrink-0\">\n                          <img\n                            src={item.image}\n                            alt={item.name}\n                            className=\"w-full h-full object-cover\"\n                          />\n                        </div>\n                        \n                        <div className=\"ml-4 flex-1\">\n                          <div className=\"flex justify-between\">\n                            <Link \n                              to={`/product/${item.id}`}\n                              className=\"font-medium hover:text-primary transition-colors\"\n                            >\n                              {item.name}\n                            </Link>\n                            <button\n                              onClick={() => removeItem(item.id)}\n                              className=\"text-muted-foreground hover:text-foreground transition-colors\"\n                              aria-label=\"Remove item\"\n                            >\n                              <X className=\"w-4 h-4\" />\n                            </button>\n                          </div>\n                          \n                          <p className=\"text-sm text-muted-foreground mt-1\">\n                            ${item.price.toFixed(2)} each\n                          </p>\n                        </div>\n                        \n                        <div className=\"flex items-center ml-4\">\n                          <div className=\"flex items-center border border-border rounded-md\">\n                            <button\n                              onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                              className=\"px-2 py-1 text-muted-foreground hover:text-foreground transition-colors\"\n                              disabled={item.quantity <= 1}\n                              aria-label=\"Decrease quantity\"\n                            >\n                              <Minus className=\"w-3 h-3\" />\n                            </button>\n                            <span className=\"px-3 py-1 font-medium\">\n                              {item.quantity}\n                            </span>\n                            <button\n                              onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                              className=\"px-2 py-1 text-muted-foreground hover:text-foreground transition-colors\"\n                              aria-label=\"Increase quantity\"\n                            >\n                              <Plus className=\"w-3 h-3\" />\n                            </button>\n                          </div>\n                          \n                          <div className=\"ml-4 w-20 text-right font-medium\">\n                            ${(item.price * item.quantity).toFixed(2)}\n                          </div>\n                        </div>\n                      </motion.div>\n                    ))}\n                  </motion.div>\n                  \n                  <div className=\"p-4 border-t border-border bg-muted/30 flex items-center justify-between\">\n                    <Button \n                      variant=\"outline\" \n                      onClick={handleUpdateCart}\n                      disabled={isUpdating}\n                    >\n                      {isUpdating ? (\n                        <>\n                          <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                          Updating...\n                        </>\n                      ) : (\n                        <>\n                          <RefreshCw className=\"w-4 h-4 mr-2\" />\n                          Update Cart\n                        </>\n                      )}\n                    </Button>\n                    \n                    <Button asChild>\n                      <Link to=\"/products\">\n                        Continue Shopping\n                      </Link>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Order Summary */}\n              <div className=\"lg:col-span-1\">\n                <div className=\"bg-background border border-border rounded-lg overflow-hidden sticky top-24\">\n                  <div className=\"p-4 border-b border-border bg-muted/30\">\n                    <h2 className=\"font-medium\">Order Summary</h2>\n                  </div>\n                  \n                  <div className=\"p-4 space-y-4\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-muted-foreground\">Subtotal</span>\n                      <span>${totalPrice.toFixed(2)}</span>\n                    </div>\n                    \n                    {isPromoValid && (\n                      <div className=\"flex justify-between text-green-600\">\n                        <span>Discount (10%)</span>\n                        <span>-${getDiscountAmount().toFixed(2)}</span>\n                      </div>\n                    )}\n                    \n                    <div className=\"flex justify-between\">\n                      <span className=\"text-muted-foreground\">Shipping</span>\n                      <span>Calculated at checkout</span>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-border\">\n                      <div className=\"flex justify-between text-lg font-medium\">\n                        <span>Total</span>\n                        <span>${getFinalTotal().toFixed(2)}</span>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        Tax calculated at checkout\n                      </p>\n                    </div>\n                    \n                    {/* Promo code */}\n                    <div className=\"pt-4\">\n                      <label htmlFor=\"promo-code\" className=\"block text-sm font-medium mb-2\">\n                        Promo Code\n                      </label>\n                      <div className=\"flex\">\n                        <input\n                          type=\"text\"\n                          id=\"promo-code\"\n                          placeholder=\"Enter promo code\"\n                          value={promoCode}\n                          onChange={(e) => setPromoCode(e.target.value)}\n                          className=\"flex-1 border border-border py-2 px-3 rounded-l-md bg-background focus:outline-none focus:ring-2 focus:ring-primary transition-all\"\n                        />\n                        <Button\n                          onClick={checkPromoCode}\n                          className=\"rounded-l-none\"\n                          variant=\"secondary\"\n                        >\n                          Apply\n                        </Button>\n                      </div>\n                      {isPromoValid === true && (\n                        <p className=\"text-sm text-green-600 mt-1\">\n                          Promo code applied successfully!\n                        </p>\n                      )}\n                      {isPromoValid === false && (\n                        <p className=\"text-sm text-red-600 mt-1\">\n                          Invalid promo code. Try \"WELCOME10\"\n                        </p>\n                      )}\n                    </div>\n                    \n                    <Button \n                      asChild\n                      className=\"w-full\"\n                    >\n                      <Link to=\"/checkout\">\n                        Proceed to Checkout <ArrowRight className=\"w-4 h-4 ml-2\" />\n                      </Link>\n                    </Button>\n                    \n                    <div className=\"text-center\">\n                      <p className=\"text-xs text-muted-foreground\">\n                        We accept: Visa, Mastercard, American Express, PayPal\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center py-16\">\n              <div className=\"w-20 h-20 rounded-full bg-muted/50 flex items-center justify-center mx-auto mb-6\">\n                <ShoppingBag className=\"w-10 h-10 text-muted-foreground\" />\n              </div>\n              <h2 className=\"text-2xl font-bold mb-4\">Your Cart is Empty</h2>\n              <p className=\"text-muted-foreground mb-8 max-w-md mx-auto\">\n                Looks like you haven't added any items to your cart yet. \n                Explore our products and find something you'll love!\n              </p>\n              <Button asChild size=\"lg\">\n                <Link to=\"/products\">\n                  Start Shopping <ArrowRight className=\"w-5 h-5 ml-2\" />\n                </Link>\n              </Button>\n            </div>\n          )}\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n};\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Cart.tsx",
            "rel_fname": "src/pages/Cart.tsx",
            "line_number": [
                17,
                23
            ],
            "name": "handleUpdateCart",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const handleUpdateCart = () => {\n    setIsUpdating(true);\n    // Simulate cart update delay\n    setTimeout(() => {\n      setIsUpdating(false);\n    }, 500);\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Cart.tsx",
            "rel_fname": "src/pages/Cart.tsx",
            "line_number": [
                25,
                32
            ],
            "name": "checkPromoCode",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const checkPromoCode = () => {\n    // Simulate promo code check\n    if (promoCode.toLowerCase() === 'welcome10') {\n      setIsPromoValid(true);\n    } else {\n      setIsPromoValid(false);\n    }\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Cart.tsx",
            "rel_fname": "src/pages/Cart.tsx",
            "line_number": [
                34,
                36
            ],
            "name": "getDiscountAmount",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const getDiscountAmount = () => {\n    return isPromoValid ? totalPrice * 0.1 : 0;\n  };\n"
        },
        {
            "fname": "/home/suyash-sethia/Desktop/Deccan_AI/non-code_platform_eval/giftastic-experience/src/pages/Cart.tsx",
            "rel_fname": "src/pages/Cart.tsx",
            "line_number": [
                38,
                41
            ],
            "name": "getFinalTotal",
            "identifier": "arrow_function",
            "category": "function",
            "details": "  const getFinalTotal = () => {\n    const discount = getDiscountAmount();\n    return totalPrice - discount;\n  };\n"
        }
    ]
}